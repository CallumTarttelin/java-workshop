/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package eightball;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.platform.commons.util.StringUtils;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.List;
import java.util.stream.Collectors;

import static org.assertj.core.api.Assertions.*;

@Disabled
class EightBallTest {

    private EightBall eightBall;

    @BeforeEach void setUp() {
        eightBall = new EightBall();
    }

    @Test void eightballPredictsFortunes() {
        for (var i = 0; i < 10; i++) {
            assertThat(eightBall.predict())
                    .isNotNull()
                    .isNotBlank()
                    .isIn(getFortunes());
        }
    }

    @Test void eightballPredictsDifferentFortunes() {
        String original = eightBall.predict();
        boolean found = false;
        for (var i = 0; i < 100; i++) {
            if (!eightBall.predict().equals(original)) {
                found = true;
                break;
            }
        }
        assertThat(found).isTrue();
    }

     @Disabled
     @Test void canGetFortunes() {
        assertThat(getFortunes())
                .isNotNull()
                .isNotEmpty();
    }

    List<String> getFortunes() {
        InputStream fortuneStream = EightBallTest.class.getResourceAsStream("/fortunes.txt");
        return new BufferedReader(new InputStreamReader(fortuneStream)).lines()
                .filter(StringUtils::isNotBlank)
                .collect(Collectors.toList());
    }
}
